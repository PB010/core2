// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDoWebApi.Entities;
using ToDoWebApi.Persistence;

namespace ToDoWebApi.Migrations
{
    [DbContext(typeof(ToDoContext))]
    [Migration("20190603104657_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ToDoWebApi.Entities.ToDo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Description")
                        .HasMaxLength(1000);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("Status");

                    b.Property<int>("ToDoPrioritiesId");

                    b.Property<DateTime>("ToDoTime");

                    b.Property<DateTime?>("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("ToDoPrioritiesId");

                    b.ToTable("ToDos");

                    b.HasData(
                        new { Id = 1, CreatedAt = new DateTime(2019, 6, 3, 13, 46, 45, 610, DateTimeKind.Local), Description = "Today is the last day to check the status of X task.", Name = "Check task status", Status = 0, ToDoPrioritiesId = 3, ToDoTime = new DateTime(2019, 6, 6, 20, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Id = 2, CreatedAt = new DateTime(2019, 6, 3, 13, 46, 45, 612, DateTimeKind.Local), Description = "Meeting at X place with Y people.", Name = "Meeting", Status = 0, ToDoPrioritiesId = 1, ToDoTime = new DateTime(2019, 6, 13, 10, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Id = 3, CreatedAt = new DateTime(2019, 6, 3, 13, 46, 45, 612, DateTimeKind.Local), Description = "Watch the new episode of X.", Name = "New episode", Status = 0, ToDoPrioritiesId = 2, ToDoTime = new DateTime(2019, 6, 9, 22, 0, 0, 0, DateTimeKind.Unspecified) }
                    );
                });

            modelBuilder.Entity("ToDoWebApi.Entities.ToDoPriorities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("ToDoPriorities");

                    b.HasData(
                        new { Id = 1, Name = "Low" },
                        new { Id = 2, Name = "Normal" },
                        new { Id = 3, Name = "High" }
                    );
                });

            modelBuilder.Entity("ToDoWebApi.Entities.ToDo", b =>
                {
                    b.HasOne("ToDoWebApi.Entities.ToDoPriorities", "ToDoPriority")
                        .WithMany()
                        .HasForeignKey("ToDoPrioritiesId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
